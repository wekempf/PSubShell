name: release
run-name: ${{ github.actor }} is publishing ðŸš€
on:
  release:
    types:
      - published # Run the workflow when a release is published

defaults:
  run:
    shell: pwsh

env:
  BuildDirectory: ${{ github.workspace }}/.build

jobs:
  build:
    name: Run build.ps1 build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Run the build script to create the versioned script file
      - name: Build
        run: |
          ./build.ps1 build

      # Publish the script as an artifact, so it can be used in other jobs
      - uses: actions/upload-artifact@v3
        with:
          name: PSubShell
          if-no-files-found: error
          retention-days: 1
          path: ${{ env.BuildDirectory }}/PSubShell.ps1

  deploy:
    # Publish only when creating a GitHub Release
    # https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Download the script created in the previous job
      - uses: actions/download-artifact@v3
        with:
          name: PSubShell
          path: ${{ env.BuildDirectory }}

      # Publish script to PowerShell Gallery
      # Use --skip-duplicate to prevent errors if a package with the same version already exists.
      # If you retry a failed workflow, already published packages will be skipped without error.
      - name: Publish script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          ./build.ps1 publish -Release
